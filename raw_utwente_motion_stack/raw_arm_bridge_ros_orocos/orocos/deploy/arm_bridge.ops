import("rtt_rosnode");
import("raw_arm_bridge_ros_orocos");

require("ros_integration")

loadComponent("arm_bridge", "ArmBridgeRosOrocos");

var ConnPolicy cp_rt;
cp_rt.type = DATA;  // Use ''BUFFER'' or ''DATA''
cp_rt.lock_policy = LOCK_FREE; // Use  ''LOCKED'', ''LOCK_FREE'' or ''UNSYNC''
connectPeers("arm_bridge", "ArmPoseController")
connect("arm_bridge.orocos_joint_positions","ArmPoseController.angles_setpoint", cp_rt)

var ConnPolicy cp_homog_mat;
cp_homog_mat.type = DATA;  // Use ''BUFFER'' or ''DATA''
cp_homog_mat.lock_policy = LOCK_FREE; // Use  ''LOCKED'', ''LOCK_FREE'' or ''UNSYNC''
connectPeers("arm_bridge", "CartesianController")
connect("arm_bridge.orocos_homog_matrix","CartesianController.Hvp0", cp_homog_mat)

var ConnPolicy cp_arm_stiff;
cp_arm_stiff.type = DATA;  // Use ''BUFFER'' or ''DATA''
cp_arm_stiff.lock_policy = LOCK_FREE; // Use  ''LOCKED'', ''LOCK_FREE'' or ''UNSYNC''
connectPeers("arm_bridge", "CartesianController")
connect("arm_bridge.orocos_arm_stiffness","CartesianController.StiffnessCC", cp_arm_stiff)

var ConnPolicy cp_arm_h_tip_cc;
cp_arm_h_tip_cc.type = DATA;  // Use ''BUFFER'' or ''DATA''
cp_arm_h_tip_cc.lock_policy = LOCK_FREE; // Use  ''LOCKED'', ''LOCK_FREE'' or ''UNSYNC''
connectPeers("arm_bridge", "CartesianController")
connect("arm_bridge.orocos_HtipCC","CartesianController.HtipCC", cp_arm_h_tip_cc)


var ConnPolicy cp_ros;
cp_ros.transport = 3;
cp_ros.name_id = "/arm_1/arm_controller/position_command";
stream("arm_bridge.brics_joint_positions", cp_ros);

#var ConnPolicy ros_arm_js;
#ros_arm_js.transport = 3;
#ros_arm_js.name_id = "/joint_states";
#stream("driver.Arm1.joint_state", ros_arm_js);

#var ConnPolicy ros_base_js;
#ros_base_js.transport = 3;
#ros_base_js.name_id = "/joint_states";
#stream("driver.Base.joint_state", ros_base_js);

connectPeers("arm_bridge", "executive")

arm_bridge.configure;
arm_bridge.setPeriod(0.01);

# 
# Start running
# 
arm_bridge.start;
