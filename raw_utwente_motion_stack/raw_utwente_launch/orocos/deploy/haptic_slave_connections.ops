#The convention in rostopic name is 
#  /Source Component name/Port Name 
#
# Connections policies
#
# Towards Haptic_master
#To ROS
var ConnPolicy cp_ros_H_tooltip_0;
cp_ros_H_tooltip_0.transport = 3;
cp_ros_H_tooltip_0.name_id = "/YouBotKinematics/H_tooltip_0";
stream("YouBotKinematics.H_tooltip_0", cp_ros_H_tooltip_0);

var ConnPolicy cp_ros_output_energy;
cp_ros_output_energy.transport = 3;
cp_ros_output_energy.size=1000;
cp_ros_output_energy.type=BUFFER;
cp_ros_output_energy.name_id = "/YouBotKinematics/output_energy_spring";
stream("YouBotKinematics.output_energy_spring", cp_ros_output_energy);

# From Haptic_master
#From ROS

var ConnPolicy cp_ros_input_energy;
cp_ros_input_energy.transport = 3;
cp_ros_input_energy.size = 1000;
cp_ros_input_energy.type=BUFFER;
cp_ros_input_energy.name_id = "/HapticMaster/output_energy";
stream("YouBotKinematics.input_energy_spring", cp_ros_input_energy);

var ConnPolicy cp_ros_Hout0;
cp_ros_Hout0.transport = 3;
cp_ros_Hout0.name_id = "/HapticMaster/Hout0";
stream("CartesianController.Hvp0", cp_ros_Hout0);
      
var ConnPolicy cp_ros_ArmJointSetpoint;
cp_ros_ArmJointSetpoint.transport = 3;
cp_ros_ArmJointSetpoint.name_id = "/HapticMaster/JointSetpoint";
stream("ArmPoseController.angles_setpoint", cp_ros_ArmJointSetpoint);

var ConnPolicy cp_ros_BaseSetpoint;
cp_ros_BaseSetpoint.transport = 3;
cp_ros_BaseSetpoint.name_id = "/HapticMaster/H_base_0";
stream("BasePoseController.H_vp_0", cp_ros_BaseSetpoint);

var ConnPolicy cp_ros_button2;
cp_ros_button2.transport = 3;
cp_ros_button2.name_id = "/phantom/button2";
stream("executive.open_gripper", cp_ros_button2);

var ConnPolicy cp_ros_slider;
cp_ros_slider.transport = 3;
cp_ros_slider.name_id = "/joystick/slider_command";
stream("executive.stiffness_slider", cp_ros_slider);

#
# Load components
#

#
# Connections
# 




#
# Start running
#

